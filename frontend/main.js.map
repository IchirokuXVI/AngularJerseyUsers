{"version":3,"sources":["./src/app/service/customDesignOptions.service.ts","./src/app/service/auth.service.ts","./src/environments/environment.ts","./src/app/component/home/home.component.ts","./src/app/component/home/home.component.html","./src/app/guard/not-auth.guard.ts","./src/app/service/interceptor.service.ts","./src/app/service/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/navbar/left/left.component.ts","./src/app/component/navbar/left/left.component.html","./src/app/guard/auth.guard.ts","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/util/CustomValidators.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { CustomDesignOptions } from '../model/CustomDesignOptions.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomDesignOptionsService {\n  private path: string;\n  private headers: HttpHeaders;\n  private options: {\n    headers: HttpHeaders\n  };\n  constructor(private http: HttpClient,\n              private _authService: AuthService) {\n      this.path = 'http://ichirokuxvi.sytes.net:8080/jerseyuserapi/webapi/userOptions';\n      this.headers = new HttpHeaders();\n      this.headers = this.headers.append('Content-Type', 'application/x-www-form-urlencoded');\n      this.options = { headers: this.headers };\n  }\n\n  public getOptions() {\n    return this.http.get<CustomDesignOptions[]>(`${this.path}`, this.options);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpBackend } from '@angular/common/http';\nimport { User } from '../model/User.model';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { map, catchError } from 'rxjs/operators';\nimport { reject, resolve } from 'q';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private userSubject: BehaviorSubject<User>;\n  private _user: Observable<User>;\n  private accessTokenSubject: BehaviorSubject<string>;\n  private _accessToken: Observable<string>;\n  private refreshTokenSubject: BehaviorSubject<string>;\n  private _refreshToken: Observable<string>;\n  private path: string;\n  private headers: HttpHeaders;\n  private options: {\n    headers: HttpHeaders\n  };\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n    this._user = this.userSubject.asObservable();\n    this.accessTokenSubject = new BehaviorSubject<string>(localStorage.getItem('accessToken'));\n    this._accessToken = this.accessTokenSubject.asObservable();\n    this.refreshTokenSubject = new BehaviorSubject<string>(localStorage.getItem('refreshToken'));\n    this._refreshToken = this.refreshTokenSubject.asObservable();\n    this.path = 'http://ichirokuxvi.sytes.net:8080/jerseyuserapi/webapi/auth';\n    this.headers = new HttpHeaders();\n    this.headers = this.headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    this.options = { headers: this.headers };\n  }\n\n  private storeUserInfo(accessToken: string, refreshToken: string) {\n    let token: any = JSON.parse(atob(accessToken.split(\".\")[1]));\n    this.userSubject.next({\n      id: token.userId,\n      username: token.sub\n    });\n    this.accessTokenSubject.next(accessToken);\n    this.refreshTokenSubject.next(refreshToken);\n    localStorage.setItem(\"user\", JSON.stringify(this.user));\n    localStorage.setItem(\"accessToken\", accessToken);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n  }\n  \n  public updateUser(user: User) {\n    this.userSubject.next(user);\n    localStorage.setItem(\"user\", JSON.stringify(this.user));\n  }\n\n  public login(user: User): Observable<any> {\n    let customHeaders = this.headers.append(\"X-Skip-Interceptor\", ''); // Custom header to skip HttpInterceptor\n    let customOptions = {headers: customHeaders};\n    return this.http.post<any>(\n      `${this.path}`,\n      `grant_type=password&username=${user.username}&password=${user.password}`,\n      customOptions\n    ).pipe(\n      map(resp => {\n        if (resp.accessToken && resp.refreshToken) this.storeUserInfo(resp.accessToken, resp.refreshToken);\n        return resp;\n      })\n    );\n  }\n  \n  public checkToken(): Observable<any> {\n    return this.http.get<any>(\n      `${this.path}`,\n      this.options\n    )\n  }\n\n  public refreshAccessToken(): Observable<any> {\n    let customHeaders = this.headers.append(\"X-Skip-Interceptor\", ''); // Custom header to skip HttpInterceptor\n    customHeaders = customHeaders.append(\"Authorization\", \"Bearer \" + this.refreshToken);\n    let customOptions = {headers: customHeaders};\n    console.log(\"startrefresh\");\n    return this.http.post<any>(\n      `${this.path}`,\n      `grant_type=refresh_token`,\n      customOptions\n    )\n    .pipe(\n      map((resp) => {\n        this.storeUserInfo(resp.accessToken, resp.refreshToken);\n        return resp;\n      }), catchError((err) => {\n        return throwError(err);\n      })\n    )\n    // .toPromise().then((resp) => {\n    //   this.storeUserInfo(resp.accessToken, resp.refreshToken);\n    //   console.log(\"token refreshed\");\n    //   return resp;\n    // }, (err) => {\n    //   return err;\n    // });\n  }\n\n  public logout() {\n    this.userSubject.next(null);\n    this.accessTokenSubject.next(null);\n    this.refreshTokenSubject.next(null);\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    this.router.navigate([\"\"]);\n  }\n\n  get user(): User {\n    return this.userSubject.value;\n  }\n\n  get accessToken(): string {\n    return this.accessTokenSubject.value;\n  }\n\n  get refreshToken(): string {\n    return this.refreshTokenSubject.value;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { AuthService } from '../../service/auth.service';\nimport { CustomValidators } from '../../util/CustomValidators';\nimport { UserService } from 'src/app/service/user.service';\nimport { CustomDesignOptionsService } from 'src/app/service/customDesignOptions.service';\nimport { CustomDesignOptions } from '../../model/CustomDesignOptions.model';\nimport { User } from 'src/app/model/User.model';\nimport { fbind } from 'q';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public frm: FormGroup;\n  public optionsFrm: FormGroup;\n  public unlocked: boolean = false;\n  public options;\n  private selectedOptions: any[];\n\n  constructor(private frmBuilder: FormBuilder,\n    private _authService: AuthService,\n    private _userService: UserService,\n    private _optionsService: CustomDesignOptionsService ) {\n    this.unlocked = false;\n    this.frm = new FormGroup({\n      newUsername: new FormControl('', {\n        validators: Validators.required,\n        updateOn: 'submit'\n      }),\n      password: new FormControl('', {\n        validators: Validators.required,\n        updateOn: 'submit'\n      }),\n      newPassword: new FormControl(''),\n      passwordConfirm: new FormControl('', {\n        validators: CustomValidators.matchValues('newPassword'),\n        updateOn: 'change'\n      })\n    });\n    // Set value after creating form so the reactive form keeps track of the change\n    // otherwise the form would be always invalid until the user triggers the change event\n    // in newUsername input\n    this.frm.controls.newUsername.setValue(this.user.username);\n\n    // Confirm password input won't be invalid/valid if you first fill confirm and then password so\n    // this way we are forcing it to re-evalidate when password changes\n    this.frm.controls.newPassword.valueChanges.subscribe(() => {\n      this.frm.controls.passwordConfirm.updateValueAndValidity();\n    });\n\n    this.getOptions();\n  }\n\n  ngOnInit(): void {\n  }\n\n  public toggleEdit() {\n    if (this.unlocked) {\n      this.frm.reset();\n      this.frm.controls.newUsername.setValue(this.user.username);\n      $('#passwordError').text('Password is required to edit your account');\n      $('.is-invalid').removeClass('is-invalid');\n    }\n    this.unlocked = !this.unlocked;\n  }\n\n  public updateUserInfo(form: FormGroup) {\n    if (form.valid) {\n      this._userService.update(form.get('password').value, form.get('newUsername').value, form.get('newPassword').value).subscribe(\n        (refreshObservable)=>{\n          // UserService.update() calls AuthService.refreshAccessToken() and returns it so instead of response we get an Observable\n          // toggleEdit must trigger after the refresh and access tokens are refreshed because otherwise the username could be wrong\n          // if it was edited and then tried to edit it again\n          refreshObservable.subscribe(() => {\n            this.toggleEdit();\n          });\n        },\n        (err) => {\n          if (err.error == \"Username already taken\") {\n            $('#usernameInput').addClass('is-invalid');\n            $('#passwordInput').removeClass('is-invalid');\n          } else if (err.error == \"Wrong password\") {\n            $('#passwordInput').addClass('is-invalid');\n            $('#passwordError').text('Wrong password');\n          }\n        });\n    }\n  }\n\n  public checkboxChange(optionId: number) {\n    console.log(optionId);\n    if (this.selectedOptions.includes(optionId)) {\n      this.selectedOptions.splice(this.selectedOptions.indexOf(optionId), 1);\n    } else {\n      this.selectedOptions.push(optionId);\n    }\n    console.log(this.selectedOptions);\n  }\n\n  public updateUserOptions(form: FormGroup) {\n    console.log(form);\n    this._userService.updateOptions(this.selectedOptions).subscribe();\n  }\n\n  public getOptions(): void {\n    this._optionsService.getOptions().subscribe((options) => {\n      // Set all checkboxes to false, later on we will set to true\n      // some of them based on user's previously selected options\n      this.optionsFrm = this.frmBuilder.group({\n        options: this.frmBuilder.array(options.map(option => {\n          return this.frmBuilder.control(false)\n        }))\n      });\n      this.options = options;\n    });\n\n    this._userService.getOptions().subscribe((options) => {\n      this.selectedOptions = options.map((option) => {\n        $(`#${this.removeWhiteSpace(option.name)}`).prop('checked', true);\n        return option.id;\n      })\n    });\n  }\n\n  public removeWhiteSpace(string: string) {\n    return string.replace(/\\s/g,'');\n  }\n\n  public get user(): User {\n    return this._authService.user;\n  }\n\n  public get optionsArray(): FormArray {\n    return this.optionsFrm.get('options') as FormArray;\n  }\n}\n","<h4>Account information</h4>\r\n<form [formGroup]=\"frm\" class=\"border-bottom pb-3\" (submit)=\"updateUserInfo(frm)\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-1 col-12 order-lg-1 order-2 mt-lg-0 mt-3\">\r\n      <button type=\"button\" (click)=\"toggleEdit()\"\r\n        class=\"btn btn-block {{ unlocked ? 'alert-danger' : 'alert-primary' }} btn-sm\"\r\n        id=\"toggleEdit\">{{ unlocked ? 'Cancel' : 'Edit' }}</button>\r\n      <button type=\"submit\" class=\"btn btn-block alert-success btn-sm {{ unlocked ? '' : 'd-none' }}\"\r\n        id=\"saveUser\">Save</button>\r\n    </div>\r\n    <div class=\"col-lg-11 mt-lg-0 mt-3 order-lg-2 order-1\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-3 col-12\">\r\n          <label for=\"usernameInput\" class=\"text-secondary d-block\">Username</label>\r\n          <input class=\"form-control {{ unlocked ? '' : 'd-none' }}\" formControlName=\"newUsername\" type=\"text\" id=\"usernameInput\">\r\n          <span class=\"{{ !unlocked ? '' : 'd-none' }}\">{{ user.username }}</span>\r\n          <span class=\"invalid-feedback\" role=\"alert\">\r\n              <strong>Username already taken</strong>\r\n          </span>\r\n        </div>\r\n        <div class=\"col-lg-3 col-12\">\r\n          <label for=\"passwordInput\" class=\"text-secondary d-block\">Password{{ unlocked ? ' (*)' : '' }}</label>\r\n          <input class=\"form-control {{ unlocked ? '' : 'd-none' }} {{ frm.get('password').invalid && frm.get('password').touched ? 'is-invalid' : '' }}\" formControlName=\"password\" name=\"password\" id=\"passwordInput\" type=\"password\"\r\n            placeholder=\"Current password\">\r\n          <span class=\"invalid-feedback\" role=\"alert\" id=\"passwordError\">\r\n              <strong>Password is required to edit your account</strong>\r\n          </span>\r\n          <span class=\"{{ !unlocked ? '' : 'd-none' }}\">******</span>\r\n        </div>\r\n        <div class=\"col-lg-3 col-12 {{ unlocked ? '' : 'd-none' }}\">\r\n          <label for=\"newPassword\" class=\"text-secondary\">New password</label>\r\n          <input class=\"form-control\" formControlName=\"newPassword\" type=\"password\" id=\"newPassword\" placeholder=\"New password\">\r\n        </div>\r\n\r\n        <div class=\"col-lg-3 col-12 {{ unlocked ? '' : 'd-none' }}\">\r\n          <label for=\"passwordConfirm\" class=\"text-secondary\">Confirm password</label>\r\n          <input class=\"form-control {{ frm.get('passwordConfirm').invalid && frm.get('passwordConfirm').dirty ? 'is-invalid' : '' }}\" formControlName=\"passwordConfirm\" type=\"password\" id=\"passwordConfirm\"\r\n            placeholder=\"Confirm password\">\r\n          <span class=\"invalid-feedback\" role=\"alert\">\r\n              <strong>Passwords doesn't match</strong>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <!-- 2 colums (first one with username, password and second one with password change inputs) -->\r\n      <!-- <div class=\"row {{ unlocked ? '' : 'd-none' }}\">\r\n        <div class=\"col-lg-6 col-12\">\r\n            <label for=\"password\" class=\"text-secondary\">New password</label>\r\n            <input class=\"form-control\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"New password\">\r\n        </div>\r\n\r\n        <div class=\"col-lg-6 col-12\">\r\n            <label for=\"password_confirmation\" class=\"text-secondary\">Confirm password</label>\r\n            <input class=\"form-control\" type=\"password\" name=\"password_confirmation\" id=\"password_confirmation\"\r\n            placeholder=\"Confirm password\">\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</form>\r\n<h4 class=\"mt-3\">Account design options</h4>\r\n<form *ngIf=\"optionsFrm\" [formGroup]=\"optionsFrm\" (change)=\"updateUserOptions(optionsFrm)\">\r\n  <div class=\"row\" formArrayName=\"options\">\r\n    <div *ngFor=\"let option of options; index as i; let last = last\" class=\"col-xl-4 col-lg-6 col-12 border-right\">\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-10\">\r\n            <label for=\"{{ removeWhiteSpace(option.name) }}\">\r\n                    {{ option.name }}\r\n            </label>\r\n        </div>\r\n        <div class=\"col-2 text-md-center text-right\">\r\n            <div class=\"custom-control custom-switch\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\" [formControlName]=\"i\" (change)=\"checkboxChange(option.id)\" id=\"{{ removeWhiteSpace(option.name) }}\">\r\n                <label class=\"custom-control-label\" for=\"{{ removeWhiteSpace(option.name) }}\"></label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12 text-muted text-justify\">\r\n              {{ option.description }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotAuthGuard implements CanActivate {\n\n  constructor(private _authServ: AuthService, private router: Router) {\n    \n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (!this._authServ.refreshToken) return true;\n      console.log((this._authServ.checkToken().toPromise().then(\n        () => {\n          this.router.navigate([\"/home\"]);\n          return false;\n        },\n        () => {\n          return true;\n        }\n        ))\n      )\n      return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, switchMap, filter, take, map, finalize } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class InterceptorService implements HttpInterceptor {\n  private refreshTokenInProgress = false;\n  private refreshTokenSubject = new BehaviorSubject<any>(null);\n\n\n  constructor(public _authService: AuthService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (req.headers.has(\"X-Skip-Interceptor\")) return next.handle(req);\n    let request = req.clone();\n    if (localStorage.getItem(\"accessToken\")) {\n      request = req.clone({\n        headers: req.headers.set(\"Authorization\", \"Bearer \" + this._authService.accessToken)\n      });\n    }\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        // Probably the token expired so try to refresh it first\n        if (error && error.status === 401 && this._authService.refreshToken) {\n          console.log(error.status);\n          if (this.refreshTokenInProgress) {\n            // Already refreshing token so we have to wait until it is refreshed\n            return this.refreshTokenSubject.pipe(\n              filter(accessToken => accessToken !== null),\n              take(1),\n              switchMap((accessToken) => {\n                request = req.clone({\n                  headers: req.headers.set(\"Authorization\", \"Bearer \" + accessToken)\n                });\n                return next.handle(request);\n              })\n            )\n          } else {\n            this.refreshTokenInProgress = true;\n            this.refreshTokenSubject.next(null);\n\n            return this._authService.refreshAccessToken().pipe(\n              switchMap(resp => {\n                this.refreshTokenInProgress = false;\n                request = req.clone({\n                  headers: req.headers.set(\"Authorization\", \"Bearer \" + resp.accessToken)\n                });\n                console.log(\"tokenRefreshed\");\n                return next.handle(request);\n              }),\n              catchError(err => {\n                if (err.status === 401) {\n                  this.refreshTokenInProgress = false;\n                  this._authService.logout();\n                }\n                return throwError(err);\n              })\n            )\n\n\n            // this._authService.refreshAccessToken().subscribe(resp => {\n            //   this.refreshTokenInProgress = false;\n            //   request = req.clone({\n            //     headers: req.headers.set(\"Authorization\", \"Bearer \" + this._authService.accessToken)\n            //   });\n            //   return next.handle(request);\n            // }, err => {\n            //   this.refreshTokenInProgress = false;\n            //   this._authService.logout();\n            //   return throwError(err);\n            // })\n\n\n            // this._authService.refreshAccessToken().pipe(\n            //   map(resp => {\n            //     this.refreshTokenInProgress = false;\n            //     this.refreshTokenSubject.next(resp.accessToken);\n            //     request = req.clone({\n            //       headers: req.headers.set(\"Authorization\", \"Bearer \" + this._authService.accessToken)\n            //     });\n            //     return next.handle(request);\n            //   }),\n            //   catchError(error => {\n            //     // If there is an exception calling 'refreshToken', bad news so logout.\n            //     this._authService.logout();\n            //     return throwError(error);\n            //   }),\n            //   finalize(() => {\n            //       this.refreshTokenInProgress = false;\n            //   })\n            // )\n\n\n            // this._authService.refreshAccessToken().then(\n            //   (resp) => {\n            //     this.refreshTokenInProgress = false;\n            //     this.refreshTokenSubject.next(resp.accessToken);\n            //     request = req.clone({\n            //       headers: req.headers.set(\"Authorization\", \"Bearer \" + this._authService.accessToken)\n            //     });\n            //     return next.handle(request);\n            //   }, (err) => {\n            //     this.refreshTokenInProgress = false;\n            //     this._authService.logout();\n            //     return throwError(error);\n            //   }\n            // )\n          }\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { User } from '../model/user.model';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { CustomDesignOptions } from '../model/CustomDesignOptions.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private path: string;\n  private headers: HttpHeaders;\n  private options: {\n    headers: HttpHeaders\n  };\n  private userOptionsSubject: BehaviorSubject<CustomDesignOptions[]>;\n  private _userOptions: Observable<CustomDesignOptions[]>;\n  constructor(private http: HttpClient,\n              private _authService: AuthService) {\n      this.path = 'http://ichirokuxvi.sytes.net:8080/jerseyuserapi/webapi/users';\n      this.headers = new HttpHeaders();\n      this.headers = this.headers.append('Content-Type', 'application/x-www-form-urlencoded');\n      this.options = { headers: this.headers };\n      this.userOptionsSubject = new BehaviorSubject(JSON.parse(localStorage.getItem(\"userOptions\")));\n      this._userOptions = this.userOptionsSubject.asObservable();\n  }\n\n  public getUser(id: string): Observable<User> {\n    return this.http.get<User>(`${this.path}`);\n  }\n\n  public register(user: User): Observable<boolean> {\n    return this.http.post<boolean>(\n      `${this.path}`,\n      `username=${user.username}&password=${user.password}`,\n      this.options\n    );\n  }\n\n  public update(password: string, newUsername: string, newPassword: string): Observable<any> {\n    let encodedUrl = `password=${password}`;\n    if (newUsername) {\n      encodedUrl += `&newUsername=${newUsername}`;\n    }\n    if (newPassword) {\n      encodedUrl += `&newPassword=${newPassword}`;\n    }\n    return this.http.put<any>(\n      `${this.path}`,\n      encodedUrl,\n      this.options\n    ).pipe(\n      map((resp) => {\n        // Setting manually id and username because resp has the password, this way the password isn't stored in local storage\n        return this._authService.refreshAccessToken();\n      })\n    )\n  }\n\n  private saveOptions(options: CustomDesignOptions[]) {\n      // Server returns options with description and we don't need it so remove it before using the data\n      for (let i = 0; i < options.length; i++) {\n        delete options[i].description;\n      }\n      localStorage.setItem(\"userOptions\", JSON.stringify(options));\n      this.userOptionsSubject.next(options);\n  }\n\n  public getOptions(): Observable<any> {\n    return this.http.get<CustomDesignOptions[]>(\n      `${this.path}/options`,\n      this.options\n    ).pipe(\n      map((options) => {\n        this.saveOptions(options);\n        return options;\n      })\n    );\n  }\n\n  public updateOptions(options: number[]): Observable<any> {\n    let urlEncodedOptions: string =  \"\";\n    options.forEach((value) => {\n      urlEncodedOptions += `options=${value}&`;\n    });\n    return this.http.post<CustomDesignOptions[]>(\n      `${this.path}/options`,\n      urlEncodedOptions,\n      this.options\n    ).pipe(\n      map((resp) => {\n        this.saveOptions(resp);\n        return resp;\n      })\n    )\n  }\n  \n  public get userOptions() {\n    return this.userOptionsSubject.value;\n  }\n}\n","import { Component } from '@angular/core';\nimport { User } from './model/user.model';\nimport { UserService } from './service/user.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from './service/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  constructor(private _authServ: AuthService,\n    private _userServ: UserService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n  }\n  \n  public checkOption(name: string) {\n    if (this.options) {\n      for (let option of this.options) {\n        if (option.name == name) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  get user() {\n    return this._authServ.user;\n  }\n\n  public get options() {\n    return this._userServ.userOptions;\n  }\n}\n","<div class=\"container-fluid min-vh-100\" style=\"{{ checkOption('Dark mode') ? 'background-color:  #333330; color: white' : '' }}\">\r\n    <div class=\"row\">\r\n        <div *ngIf=\"user && !checkOption('Top navbar')\" app-left id=\"navbarContainer\" class=\"{{ checkOption('Sticky navbar') ? 'position-sticky' : 'position-absolute' }}\"></div>\r\n        <div id=\"main\" class=\"mx-auto {{ user ? 'col-10' : 'col-12' }}\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { LeftComponent } from './component/navbar/left/left.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { InterceptorService } from './service/interceptor.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    LeftComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: InterceptorService,\n      multi: true\n    },\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'div[app-left]',\n  templateUrl: './left.component.html',\n  styleUrls: ['./left.component.scss']\n})\nexport class LeftComponent implements OnInit {\n\n  constructor(private _authServ: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    $(() => {\n      const sidebar = $('#sidebar');\n      const sidebarWidth = $(sidebar).width();\n      $(sidebar).width(sidebarWidth);\n      const sidebarLargestSpan = Math.max(...$(sidebar).find('li a span').map(function() { return $(this).outerWidth(true)}));\n      $(sidebar).on('mouseenter', (e) => {\n        $(e.currentTarget).width(sidebarWidth + sidebarLargestSpan + 5);\n      });\n\n      $(sidebar).on('mouseleave', (e) => {\n        $(e.currentTarget).width(sidebarWidth);\n      });\n    });\n  }\n\n  logout() {\n    this._authServ.logout();\n  }\n\n}\n","<div id=\"sidebar\">\n    <nav>\n        <ul class=\"list-unstyled\">\n            <li>\n                <a [routerLink]=\"['/home']\">\n                    <i class=\"fas fa-home\"></i>\n                    <span class=\"ml-3\">Home</span>\n                </a>\n            </li>\n            <li>\n                <a (click)=\"logout()\" id=\"logout\">\n                    <i class=\"fas fa-sign-out-alt\"></i>\n                    <span class=\"ml-3\">Logout</span>\n                </a>\n            </li>\n        </ul>\n    </nav>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { AuthService } from '../service/auth.service';\nimport { delay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _authServ: AuthService, private router: Router) {\n    \n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (!this._authServ.refreshToken) {\n        this.router.navigate([\"\"]);\n        return false;\n      }\n      return this._authServ.checkToken().toPromise().then(\n        (resp) => {\n          console.log(\"tokenChecked true\");\n          return true;\n        },\n        (err) => {\n          console.log(\"Token expired or an error ocurred\");\n          this._authServ.logout();\n          this.router.navigate([\"\"]);\n          return false;\n        }\n      )\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../../service/auth.service';\nimport { UserService } from '../../service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'div[app-login]',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  login: boolean = true;\n\n  constructor(private _authServ: AuthService,\n              private _userServ: UserService,\n              protected router: Router) {\n    this.form = new FormGroup ({\n      username: new FormControl('', {\n        validators: Validators.required,\n        updateOn: 'submit'\n      }),\n      password: new FormControl('', {\n        validators: Validators.required,\n        updateOn: 'submit'\n      })\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  public sendForm(form: FormGroup) {\n    if (form.valid) {\n      if (this.login) {\n        this._authServ.login(form.value).subscribe(\n          next => {\n            this.router.navigate([\"/home\"]);\n          },\n          error => {\n            $('#formError').text(\"Invalid username or password\");\n          }\n        );\n      } else {\n        if ($('#password').val() === $('#confirmPassword').val()) {\n          $('#confirmPasswordError').text(\"\");\n          this._userServ.register(form.value).subscribe(\n            resp => {\n                $('#formMessage').text(\"User successfully created\");\n                $('#usernameError').text(\"\");\n                this.login = true;\n            }, err => {\n              $('#usernameError').text(\"Username already taken\");\n          });\n        } else {\n          $('#confirmPasswordError').text(\"Passwords doesn't match\");\n        }\n      }\n    }\n  }\n\n  public secondButtonClick(): void {\n    this.login = !this.login;\n    $('#formError').text(\"\");\n    $('#usernameError').text(\"\");\n    $('#formMessage').text(\"\");\n  }\n\n  public checkOption(name: string) {\n    if (this.options) {\n      for (let option of this.options) {\n        if (option.name == name) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  public get options() {\n    return this._userServ.userOptions;\n  }\n\n}\n","<div class=\"row min-vh-100\">\n  <div class=\"side-text col-lg-5 col-sm-12 bg-black order-lg-1 order-2\">\n    <div class=\"row h-100\">\n      <div class=\"col-8 mx-auto mt-xl-25 mt-3 text-justify\">\n        <p *ngIf=\"login; else register\">\n            Login with your user or create a new one to get started !\n        </p>\n        <ng-template #register>\n          <p>\n            By creating an account you will get access to the website. Don't forget your password !\n          </p>\n        </ng-template>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec mollis est sed est imperdiet tempor. Aliquam\n          pulvinar semper suscipit. Morbi facilisis, sem quis aliquam pulvinar, odio nunc tempus nisi, vel mollis augue\n          nisl ac tortor. Maecenas condimentum interdum diam sed finibus. Vivamus ut sodales lacus. Vestibulum sit amet\n          consequat diam. Sed pharetra varius ligula.\n        </p>\n        <p>\n          Aliquam eu faucibus diam. Praesent a nisl condimentum, pretium\n          lacus dapibus, aliquet est. Nunc nec nisi imperdiet, blandit felis et, vestibulum ligula. Curabitur eget\n          mattis quam. Donec eget convallis magna. Morbi sed pulvinar justo. Ut malesuada dui odio, nec cursus ante\n          rhoncus lacinia. Phasellus massa diam, rutrum et libero aliquet, pharetra tempor eros. Donec non elementum\n          massa, at porttitor felis.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-lg-7 col-12 mt-xl-15 mt-2 order-lg-2 order-1\">\n    <div class=\"row\">\n      <div class=\"col-xl-4 col-10 mx-auto\">\n        <div class=\"login-form\">\n          <form [formGroup]=\"form\" (ngSubmit)=\"sendForm(form)\">\n            <div class=\"form-group\">\n              <label>Username</label>\n              <input type=\"text\" style=\"{{ checkOption('Dark mode') ? 'background-color: #dedede' : ''}}\" formControlName=\"username\" class=\"form-control\" placeholder=\"Username\" />\n              <div class=\"text-danger\" id=\"usernameError\">\n\n              </div>\n              <!-- <div *ngIf=\"loginForm.get('username').hasError('required')\" class=\"text-danger\">\n                Username is required\n              </div> -->\n            </div>\n\n            <div class=\"form-group\">\n              <label>Password</label>\n            <input type=\"password\" style=\"{{ checkOption('Dark mode') ? 'background-color: #dedede' : ''}}\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\" id=\"password\" />\n              <!-- <div *ngIf=\"loginForm.get('password').hasError('required')\" class=\"text-danger\">\n                Password is required\n              </div> -->\n            </div>\n\n            <div *ngIf=\"!login\" class=\"form-group\">\n              <label>Confirm password</label>\n              <input type=\"password\" style=\"{{ checkOption('Dark mode') ? 'background-color: #dedede' : ''}}\" class=\"form-control\" placeholder=\"Confirm password\" id=\"confirmPassword\" />\n              <div class=\"text-danger\" id=\"confirmPasswordError\">\n                \n              </div>\n            </div>\n\n            <div class=\"text-danger mb-3\" id=\"formError\">\n              \n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-xl-6 col-12 mx-auto\">\n                <button type=\"submit\" class=\"btn btn-block btn-black\" id=\"firstButton\">\n                    {{ login ? \"Login\" : \"Create account\" }}\n                </button>\n              </div>\n              <div class=\"col-xl-6 col-12 mt-xl-0 mt-2 mx-auto\">\n                <button type=\"button\" (click)=\"secondButtonClick()\" class=\"btn btn-block btn-secondary\" id=\"secondButton\">\n                    {{ login ? \"Register\" : \"Cancel\" }}\n                </button>\n              </div>\n            </div>\n            <div class=\"text-success text-center mt-3\" id=\"formMessage\">\n\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { FormGroup, ValidationErrors, AbstractControl, Validators } from '@angular/forms';\r\n\r\nexport class CustomValidators extends Validators {\r\n    /**\r\n     * Checks if two inputs have the same value\r\n     * Used in register and update\r\n     */\r\n    public static matchValues(matchTo: string): (AbstractControl) => ValidationErrors | null {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n          return !!control.parent &&\r\n            !!control.parent.value &&\r\n            control.value === control.parent.controls[matchTo].value\r\n            ? null\r\n            : { isMatching: false };\r\n        };\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './component/home/home.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { AuthGuard } from './guard/auth.guard';\nimport { NotAuthGuard } from './guard/not-auth.guard';\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent, canActivate: [AuthGuard]},\n  {path: '**', component: LoginComponent, canActivate: [NotAuthGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}